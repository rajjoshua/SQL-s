WITH ranked_transactions AS (
  SELECT
    ai.account_number,
    t.tran_id,
    t.tran_status,
    t.tran_amount,
    t.eap_as_of_date,
    ROW_NUMBER() OVER (PARTITION BY ai.account_number, t.tran_id ORDER BY t.eap_as_of_date DESC) AS row_num
  FROM
    your_table_name t
    JOIN account_info ai ON t.account_id = ai.account_id
  WHERE
    t.tran_status IN ('New', 'Updated', 'Cancelled')
)

SELECT
  r.account_number,
  COUNT(DISTINCT CASE WHEN r.tran_status IN ('New', 'Updated', 'Cancelled') THEN r.tran_id END) AS transaction_count,
  SUM(CASE WHEN r.tran_status = 'New' THEN r.tran_amount
           WHEN r.tran_status = 'Updated' AND r.row_num = 1 THEN r.tran_amount
           ELSE 0 END) AS aggregated_amount
FROM
  ranked_transactions r
WHERE
  NOT EXISTS (
    SELECT 1
    FROM ranked_transactions AS r2
    WHERE r2.account_number = r.account_number
      AND r2.tran_id = r.tran_id
      AND r2.row_num = 1
      AND r2.tran_status = 'Cancelled'
  )
GROUP BY
  r.account_number;
